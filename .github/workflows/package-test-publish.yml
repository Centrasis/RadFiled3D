name: Python packaging testing

on: [push]

jobs:
  build-windows:
    runs-on: windows-latest
    strategy:
      max-parallel: 5
      matrix:
        python-version: [3.12]

    steps:
    - uses: actions/checkout@v4
    - name: Install compiler
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x64
    - name: Set up Clang
      uses: egor-tensin/setup-clang@v1
      with:
        version: latest
        platform: x64
    - name: Install CMake
      uses: jwlawson/actions-setup-cmake@v1
      with:
        cmake-version: '3.21.3'
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Build RadFiled3D Wheel
      run: |
        python -m pip install setuptools wheel build
        python -m build --wheel --no-isolation
    - name: Install built wheel ${{ matrix.python-version }}
      run: |
          python -m pip install ./dist/*.whl
    - name: Lint with flake8
      run: |
        python -m pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        python -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        python -m flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5
      matrix:
        python-version: [3.12]
    steps:
    - uses: actions/checkout@v4
    - name: Install compiler
      run: sudo apt-get install -y build-essential
    - name: Set up Clang
      run: sudo apt-get install -y clang
    - name: Install CMake
      run: sudo apt-get install -y cmake
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Build RadFiled3D Wheel
      run: |
        python -m pip install setuptools wheel build
        python -m build --wheel --no-isolation
    - name: Install built wheel ${{ matrix.python-version }}
      run: |
        python -m pip install ./dist/*.whl
    - name: Lint with flake8
      run: |
        python -m pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        python -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        python -m flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  test-linux:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    name: Test on Linux ${{ matrix.python-version }}
    needs:
      - build-linux
    steps:
      - name: Install built wheel ${{ matrix.python-version }}
        run: |
          TAG_NAME=${{ github.ref }} && TAG_NAME=${TAG_NAME##*/} && python -m pip install ./dist/*-${TAG_NAME}-*.whl
      - name: Test with pytest
        run: |
          python -m pip install pytest
          python -m pytest tests/
  test-windows:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: windows-latest
    name: Test on Windows ${{ matrix.python-version }}
    needs:
      - build-windows
    steps:
      - name: Install built wheel ${{ matrix.python-version }}
        run: |
          TAG_NAME=${{ github.ref }} && TAG_NAME=${TAG_NAME##*/} && python -m pip install ./dist/*-${TAG_NAME}-*.whl
      - name: Test with pytest
        run: |
          python -m pip install pytest
          python -m pytest tests/
  publish-linux:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    name: Publish on Linux ${{ matrix.python-version }}
    needs:
      - test-linux
    environment:
      name: pypi
      url: https://pypi.org/p/RadFiled3D
    permissions:
      id-token: write
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
  publish-windows:
    runs-on: windows-latest
    if: startsWith(github.ref, 'refs/tags/')
    name: Publish on Windows ${{ matrix.python-version }}
    needs:
      - test-windows
    environment:
      name: pypi
      url: https://pypi.org/p/RadFiled3D
    permissions:
      id-token: write
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1